(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{265:function(v,_,l){"use strict";l.r(_);var T=l(28),i=Object(T.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"_02-test"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_02-test"}},[v._v("#")]),v._v(" 02. Test")]),v._v(" "),l("blockquote",[l("p",[v._v("20200415 开始学习极客时间"),l("a",{attrs:{href:"http://gk.link/a/10hFB",target:"_blank",rel:"noopener noreferrer"}},[v._v("《透视 HTTP 协议》"),l("OutboundLink")],1),v._v(", 发出什么时候才能成为dalao 的感叹")])]),v._v(" "),l("h2",{attrs:{id:"学前思考"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#学前思考"}},[v._v("#")]),v._v(" 学前思考")]),v._v(" "),l("ul",[l("li",[v._v("HTTP 解决了什么问题")]),v._v(" "),l("li",[v._v("HTTPS 解决了 HTTP 什么问题, 通过什么技术手段")]),v._v(" "),l("li",[v._v("HTTP2 解决了 HTTP 的什么问题, 通过什么技术手段")])]),v._v(" "),l("h2",{attrs:{id:"随手笔记"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#随手笔记"}},[v._v("#")]),v._v(" 随手笔记")]),v._v(" "),l("ul",[l("li",[v._v('HTTP协议过于"常见", 就像水与空气一般，普遍到我们忘记了它们的存在.')]),v._v(" "),l("li",[v._v("表面简单: 请求/响应, GET/POST, Header/Body. 每次需要查查找找总能应付过去.")]),v._v(" "),l("li",[v._v("实际复杂: 只懂表象或查到就用，颅内无系统概念(就算查找也只能得到模糊概念).")]),v._v(" "),l("li",[v._v("作者提问:\n"),l("ul",[l("li",[v._v("[ ] Nginx的指令为什么这么配置？")]),v._v(" "),l("li",[v._v("[ ] 写爬虫时 URI & URL 是什么")]),v._v(" "),l("li",[v._v("[ ] HTTP 缓存的原理，使用时机")]),v._v(" "),l("li",[v._v("[ ] HTTP & HTTPS 的关系，其中的各种概念(SSL/TLS/SNI/OCSP/ALPN)")])])]),v._v(" "),l("li",[v._v("HTTP难的原因:\n"),l("ul",[l("li",[v._v("正式资料少: HTTP名书少(过于概念化，缺少实战训练)，且书较老(不合时宜，20年前的RFC2616 -> 现今的RFC7230)")]),v._v(" "),l("li",[v._v("网上子类杂: 能解决问题，但只针对一个知识点 & 需要自行鉴别（过于碎片化）")]),v._v(" "),l("li",[v._v("权威资料难: RFC文档全英&旁征博引.")])])]),v._v(" "),l("li",[v._v("讲述内容: 充分广度 -> 兼具深度\n"),l("ul",[l("li",[v._v("广度("),l("strong",[v._v("TODO:知识串链成图")]),v._v(")\n"),l("ul",[l("li",[v._v("HTTP")]),v._v(" "),l("li",[v._v("TCP/IP")]),v._v(" "),l("li",[v._v("DNS")]),v._v(" "),l("li",[v._v("SSL/TLS")]),v._v(" "),l("li",[v._v("Web Server")])])]),v._v(" "),l("li",[v._v("深度(最新 RFC + 实战心得)")])])]),v._v(" "),l("li",[v._v("评论知识:\n"),l("ul",[l("li",[v._v("TCP是面向传输的协议，初衷是解决传输的安全性和可靠性，而应用层有许多公共需求(获取、修改、删除资源)，如果没有 HTTP 则各种浏览器都需要自行实现私有协议，更大的问题是网站服务提供商要去兼容各个终端的协议（不可能），故 HTTP 的出现除了用户因素外，服务提供商也必须去做(类似华为定制5G协议？)")]),v._v(" "),l("li",[l("a",{attrs:{href:"https://github.com/chronolaw/ngx_cpp_dev",target:"_blank",rel:"noopener noreferrer"}},[v._v("C++ Nginx 开发"),l("OutboundLink")],1)])])])]),v._v(" "),l("h2",{attrs:{id:"目录简览"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#目录简览"}},[v._v("#")]),v._v(" 目录简览")]),v._v(" "),l("ul",[l("li",[v._v("破冰: 溯源 -> 5W1H -> 广度搜索相关概念&协议 -> 分层模型 -> 域名 -> BP:搭实验环境")]),v._v(" "),l("li",[v._v("筑基: 一次请求 -> 分析特点、优缺点")]),v._v(" "),l("li",[v._v("升阶: HTTP 广度搜索")]),v._v(" "),l("li",[v._v("守护: HTTPS 5W1H & 原理")]),v._v(" "),l("li",[v._v("上天: HTTP/2 5W1H & 原理, HTTP/3 远眺")]),v._v(" "),l("li",[v._v("问道: 场景的实践解析")]),v._v(" "),l("li",[v._v("回首: "),l("strong",[v._v("TODO:先坚持攀登,到顶再回首")])])]),v._v(" "),l("h2",{attrs:{id:"一-溯源篇"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#一-溯源篇"}},[v._v("#")]),v._v(" 一. 溯源篇")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("如果平行世界里有两台电脑A、B(存在极长物理距离)，已有 TCP/IP，现在自行研发协议:")]),v._v(" "),l("ul",[l("li",[v._v("【FTP】一对一")]),v._v(" "),l("li",[v._v("【HTTP/0.9】A、B上各有一个只有一行HelloWorld文本的网站\n"),l("ul",[l("li",[v._v("如何互相访问;")])])]),v._v(" "),l("li",[v._v("【HTTP/1.0】A、B上各提供了一个文件上传接口\n"),l("ul",[l("li",[v._v("如何传输文件")]),v._v(" "),l("li",[v._v("如何知道传输结果")]),v._v(" "),l("li",[v._v("怎么知道当前的传输协议版本")]),v._v(" "),l("li",[v._v("如何在传输时携带信息")])])]),v._v(" "),l("li",[v._v("【HTTP/1.1】A、B上各搭建了一个管理系统\n"),l("ul",[l("li",[v._v("如何发出修改、删除请求")]),v._v(" "),l("li",[v._v("系统更新时如何实现增量更新(缓存管理&控制)")]),v._v(" "),l("li",[v._v("[ ] 如何减免每请求一次之后就要重新握手的消耗(持久连接) TODO: 场景是否正确")]),v._v(" "),l("li",[v._v("如何在网络不好的情况下传输超级大文件(数据分块(chunked))")]),v._v(" "),l("li",[v._v("[ ] 从单机升级为集群后，如何依旧用原地址访问(Host头) TODO: 场景是否正确")])])]),v._v(" "),l("li",[v._v("【HTTP/2.0 - SPDY协议】针对网络环境做升级\n"),l("ul",[l("li",[v._v("带宽不足(纯文本->二进制)")]),v._v(" "),l("li",[v._v("请求过多(可发起多个请求, 服务器可以主动推数据)")]),v._v(" "),l("li",[v._v("如何优化请求的数据传输量(哈夫曼压缩Header)")]),v._v(" "),l("li",[v._v("如何保证安全性（加密通信）")])])]),v._v(" "),l("li",[v._v("【HTTP/3.0 - QUIC协议】")])])]),v._v(" "),l("li",[l("p",[v._v("HTTP发展的动力:")]),v._v(" "),l("ul",[l("li",[v._v("原始阶段: 是网络通讯需求，然后是实际应用中的检验;")]),v._v(" "),l("li",[v._v('商业化阶段: 从"各家自成一派"到"统一游戏规则"降低了"互联"的成本, 在通用规则中实现发展&合作&竞争;')]),v._v(" "),l("li",[v._v("研究阶段: 成型之后就是更高更快更强的优化 & 安全隐私方面的提升;")])])]),v._v(" "),l("li",[l("p",[v._v("对HTTP的理解:")]),v._v(" "),l("ul",[l("li",[v._v("TCP提供了基础能力，HTTP在其之上汇总了公共需求形成通用协议，HTTP的本质是P(Protocol)即协议.交互双方共同遵守.")]),v._v(" "),l("li",[v._v("TCP是河，HTTP是船，用于传输.")]),v._v(" "),l("li",[v._v("超文本是网状结构(文本包含超链接，超链接对应的文本包含超链接?), 文本是线性结构.")]),v._v(" "),l("li",[v._v("拆字法(HyperText Transfer Protocol):\n"),l("ul",[l("li",[v._v("Protocol: 首先是一个协议。协，多方参加；议，约定和规范.\n"),l("ul",[l("li",[v._v("第一层: HTTP是计算机世界里的协议，使计算机能够以一种通用规范(包括控制和错误处理)进行信息交流.")])])]),v._v(" "),l("li",[v._v("Transfer: 进一步，HTTP 是一个传输协议.\n"),l("ul",[l("li",[v._v("HTTP是一个双向协议，先发起者为请求方，后接到传输者为应答方或者响应方.")]),v._v(" "),l("li",[v._v('请求方和响应方中间可以有任意多个遵从HTTP协议的"中间人".')]),v._v(" "),l("li",[v._v("第二层: HTTP是计算机世界里用来"),l("strong",[v._v("在两点之间")]),v._v("传输数据的约定和规范.（不能广播、寻址、路由）")])])]),v._v(" "),l("li",[v._v("HyperText: 文字、图片、音频、视频都属于超文本.\n"),l("ul",[l("li",[v._v("第三层: HTTP 是在一个计算机世界里用来在两点之间传输文字、图片、音频、视频等超文本信息的约定和规范.")]),v._v(" "),l("li",[v._v('Tip: "协议"严格来说应该包含语法、语义、同步规则 & 错误处理.')]),v._v(" "),l("li",[v._v("Tip: 浏览器只能作为请求方.")])])])])])])]),v._v(" "),l("li",[l("p",[v._v("RFC:")]),v._v(" "),l("ul",[l("li",[v._v("HTTP/0.9: 无")]),v._v(" "),l("li",[v._v("HTTP/1.0: RFC1945")]),v._v(" "),l("li",[v._v("HTTP/1.1: 最初是1999年的 RFC2616, 2014年拆分成了六份文档 7230-7235(只做了细节优化)")]),v._v(" "),l("li",[v._v("HTTP/2.0: 2015年的RFC7540")])])]),v._v(" "),l("li",[l("p",[v._v("去除错误理解（HTTP不是什么）:")]),v._v(" "),l("ul",[l("li",[v._v("不是互联网: 互联网是一个覆盖全球的网络（硬件设备上承载着各种资源，资源通过各种协议传递）")]),v._v(" "),l("li",[v._v("不是编程语言: 编程语言用于人机沟通，HTTP用于规范计算机之间的沟通")]),v._v(" "),l("li",[v._v("不是孤立的协议: HTTP通常运行在TCP/IP协议栈上，IP协(寻址和路由) & TCP(可靠数据传输) & DNS(域名查找) & SSL/TLS(安全通信)共同构成了协议网. "),l("strong",[v._v("HTTP处于中心地位.")]),v._v(" "),l("ul",[l("li",[v._v("Tip: HTTP 在 UNIX 上可以运行在 Domain Socket 和 SSL/TLS 上.")])])]),v._v(" "),l("li",[v._v("不是实际存在的软件: 只是规范，没有实体.")])])]),v._v(" "),l("li",[l("p",[v._v("TODO:问题:")]),v._v(" "),l("ul",[l("li",[v._v("[ ] 局域网、广域网、英特网(FTP、IMAP/POP3、BT、Magnet)、万维网各是什么，有什么区别\n"),l("ul",[l("li",[v._v("浏览器访问的是万维网哦.")])])])])]),v._v(" "),l("li",[l("p",[v._v("HTTP世界地图:")]),v._v(" "),l("ul",[l("li",[v._v("流程: UserAgent(浏览器or爬虫) -> HTTP请求 -> 部分静态资源CDN直接响应 ->  WAF过滤 -> 服务器 -> 返回 HTML 或请求结果.")]),v._v(" "),l("li",[v._v("鸟瞰: 互联网(Internet)由茫茫多的岛屿(小型网络:包括局域网、广域网、固定网络、移动网络)组成.\n"),l("ul",[l("li",[v._v("万维网: 基于 HTTP 传输超文本资源（能力被限制在 HTTP 内）")]),v._v(" "),l("li",[v._v("电子邮件: 基于 IMAP/POP3")]),v._v(" "),l("li",[v._v("下载: BT/Magnet")]),v._v(" "),l("li",[v._v("其他: FTP文件服务器、SSH安全登录、即时通讯服务")])])]),v._v(" "),l("li",[v._v("HTTP协议的灵活性和可扩展性 + 超文本的表述能力 => 绝大部分资源使用HTTP传输(可将其他原本不属于 HTTP 的资源包装成 HTTP 来访问)\n"),l("ul",[l("li",[v._v("[ ] 微信网页版原理: WebSocket+HTTP?")]),v._v(" "),l("li",[v._v("[ ] 邮箱网页版原理: IMAP/POP3 => WebSocket+HTTP?")])])]),v._v(" "),l("li",[v._v("浏览器（Web Browser，其中Web -> World Wide Web, 万维网): 作为HTTP协议中的请求方(无响应能力), 即 User Agent.")]),v._v(" "),l("li",[v._v("服务器（Web Server）: HTTP 协议里响应请求的主体. 硬件(主机 or 集群) + 软件（提供资源或请求响应）")]),v._v(" "),l("li",[v._v("CDN (Content Delivery Network): 位于浏览器和服务器之间, 缓存源站的数据，缩短响应时间.")]),v._v(" "),l("li",[v._v("爬虫（Crawler）: 多来自搜索引擎, 也属于 User Agent.")]),v._v(" "),l("li",[v._v("HTML: 主要传输内容之一")]),v._v(" "),l("li",[v._v("Web Service: W3C定义的应用服务开发规范，使用CS主从架构，通过WSDL定义服务接口，使用HTTP协议传输XML和SOAP消息.\n"),l("ul",[l("li",[v._v("Web Service 是一个基于Web(HTTP)的服务架构技术.")]),v._v(" "),l("li",[v._v("Web Service 是网络服务实体 和 Web Server 是网络服务器，后退着为了承载前者而存在.")])])]),v._v(" "),l("li",[v._v("WAF: 网络应用防火墙, 位于 Web 服务器之前提供防御服务(ModSecurity 可以集成进 Apache 或 Nginx).")])])])])])}),[],!1,null,null,null);_.default=i.exports}}]);